// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "./__generated"
}

datasource db {
  provider = "sqlite"
  url      = "file:./db/dev.db"
}

model Role {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users UserRole[]
}

model User {
  id        Int    @id @default(autoincrement())
  username  String @unique
  initials  String @unique
  password  String
  firstName String
  lastName  String

  roles        UserRole[]
  classes      UserClass[]
  appointments Appointment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserRole {
  userId Int
  user   User @relation(fields: [userId], references: [id])
  roleId Int
  role   Role @relation(fields: [roleId], references: [id])

  @@id([userId, roleId])
}

model Class {
  id        Int    @id @default(autoincrement())
  className String
  education String
  users     UserClass[]
  appointments Appointment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserClass {
  userId  Int
  user    User  @relation(fields: [userId], references: [id])
  classId Int
  class   Class @relation(fields: [classId], references: [id])

  @@id([userId, classId])
}

model Appointment {
  id            Int      @id @default(autoincrement())
  studentNumber String?
  studentName   String?
  parentName    String?
  phoneNumber   String?
  email         String?
  startTime     DateTime
  endTime       DateTime
  isClaimed     Boolean  @default(false)
  isRejected    Boolean  @default(false)
  user          User     @relation(fields: [userId], references: [id])
  userId        Int
  class         Class?   @relation(fields: [classId], references: [id])
  classId       Int?

  parentCode   ParentCode? @relation(fields: [parentCodeId], references: [id])
  parentCodeId Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ParentCode {
  id            Int          @id @default(autoincrement())
  code          String
  
  appointments Appointment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Session {
  id        String   @id @default(uuid()) @map("_id")
  sid       String   @unique
  data      String
  expiresAt DateTime
}